name: Docker build and push to GitHub Container Registry
on:
  workflow_call:
    inputs:
      build-context:
        type: string
        default: "."
      dockerfile:
        type: string
        default: ./Dockerfile
      dockerhub-username:
        type: string
        default: y13i
    secrets:
      dockerhub-access-token:
        required: true
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - id: branch-name
        name: Get branch name
        uses: tj-actions/branch-names@v8
      - id: vars
        name: Get variables
        run: |
          echo "date=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT 
          echo "datetime=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT 
          echo "short-sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.dockerhub-username }}
          password: ${{ secrets.dockerhub-access-token }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - id: docker-metadata
        name: Create docker metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest
            type=raw,value=${{ steps.vars.outputs.date }}
            type=raw,value=${{ format('{0}-{1}', steps.branch-name.outputs.current_branch, steps.vars.outputs.short-sha) }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ inputs.build-context }}
          file: ${{ inputs.dockerfile }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64
